
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Jeyssson
 */
public class Calculator extends javax.swing.JFrame {

    /**
     * Creates new form Calculator
     */
    public Calculator() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the
     * form.WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    public boolean validateInputs() {
        int num1, num2;
        try {
            num1 = Integer.parseInt(n1.getText());
            num2 = Integer.parseInt(n2.getText());
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public int convertInput(String num) {
        return (Integer.parseInt(num));
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        n1 = new javax.swing.JTextField();
        n2 = new javax.swing.JTextField();
        resultBtn = new javax.swing.JLabel();
        plusBtn = new javax.swing.JButton();
        minusBtn = new javax.swing.JButton();
        divBtn = new javax.swing.JButton();
        timesBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        n1.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        n1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        n1.setText("0");

        n2.setFont(new java.awt.Font("Calibri Light", 1, 14)); // NOI18N
        n2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        n2.setText("0");
        n2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n2ActionPerformed(evt);
            }
        });

        resultBtn.setFont(new java.awt.Font("Calibri Light", 1, 36)); // NOI18N
        resultBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultBtn.setText("0");

        plusBtn.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        plusBtn.setText("+");
        plusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusBtnActionPerformed(evt);
            }
        });

        minusBtn.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        minusBtn.setText("-");
        minusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusBtnActionPerformed(evt);
            }
        });

        divBtn.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        divBtn.setText("/");
        divBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divBtnActionPerformed(evt);
            }
        });

        timesBtn.setFont(new java.awt.Font("Calibri Light", 1, 12)); // NOI18N
        timesBtn.setText("x");
        timesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timesBtnActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(plusBtn)
                                .addGap(32, 32, 32)
                                .addComponent(minusBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(divBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(n1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(timesBtn)
                                    .addComponent(n2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(resultBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(clearBtn)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(n2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(n1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plusBtn)
                    .addComponent(minusBtn)
                    .addComponent(timesBtn)
                    .addComponent(divBtn))
                .addGap(18, 18, 18)
                .addComponent(resultBtn)
                .addGap(18, 18, 18)
                .addComponent(clearBtn)
                .addGap(58, 58, 58))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusBtnActionPerformed
        if (validateInputs()) {
            int res = 0;
            int num1 = convertInput(n1.getText());
            int num2 = convertInput(n2.getText());
            res = num1 - num2;
            resultBtn.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }
    }//GEN-LAST:event_minusBtnActionPerformed

    private void n2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_n2ActionPerformed

    private void plusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusBtnActionPerformed
        if (validateInputs()) {
            int res = 0;
            int num1 = convertInput(n1.getText());
            int num2 = convertInput(n2.getText());
            res = num1 + num2;
            resultBtn.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }

    }//GEN-LAST:event_plusBtnActionPerformed

    private void timesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timesBtnActionPerformed
        if (validateInputs()) {
            int res = 0;
            int num1 = convertInput(n1.getText());
            int num2 = convertInput(n2.getText());
            res = num1 * num2;
            resultBtn.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }
    }//GEN-LAST:event_timesBtnActionPerformed

    private void divBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divBtnActionPerformed
        if (validateInputs()) {
            int res = 0;
            int num1 = convertInput(n1.getText());
            int num2 = convertInput(n2.getText());
            res = num1 / num2;
            resultBtn.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }
    }//GEN-LAST:event_divBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        n1.setText("");
        n2.setText("");
        resultBtn.setText("0");
    }//GEN-LAST:event_clearBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Calculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Calculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton divBtn;
    private javax.swing.JButton minusBtn;
    private javax.swing.JTextField n1;
    private javax.swing.JTextField n2;
    private javax.swing.JButton plusBtn;
    private javax.swing.JLabel resultBtn;
    private javax.swing.JButton timesBtn;
    // End of variables declaration//GEN-END:variables
}
