
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Jeyssson
 */
public class ExtendedCalculator extends javax.swing.JFrame {

    /**
     * Creates new form ExtendedCalculator
     */
    public ExtendedCalculator() {
        initComponents();
    }

    public boolean validateInputs() {
        int num1, num2;
        try {
            num1 = Integer.parseInt(n1.getText());
            num2 = Integer.parseInt(n2.getText());
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean validateInputOne() {
        int num1, num2;
        try {
            num1 = Integer.parseInt(n1.getText());
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public boolean validateInputTwo() {
        int num1, num2;
        try {
            num2 = Integer.parseInt(n2.getText());
            return true;
        } catch (Exception e) {
            return false;
        }
    }

    public int convertInput(String num) {
        return (Integer.parseInt(num));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resultLabel = new javax.swing.JLabel();
        n1 = new javax.swing.JTextField();
        n2 = new javax.swing.JTextField();
        Operations = new javax.swing.JLabel();
        plusBtn = new javax.swing.JButton();
        minusBtn = new javax.swing.JButton();
        timesBtn = new javax.swing.JButton();
        divBtn = new javax.swing.JButton();
        sqrtNumberOneBtn = new javax.swing.JButton();
        sqrtNumberTwoBtn = new javax.swing.JButton();
        greaterOrLessBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        greaterOrLessLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        resultLabel.setFont(new java.awt.Font("Calibri Light", 1, 36)); // NOI18N
        resultLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        resultLabel.setText("0");

        n1.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        n1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        n1.setText("0");
        n1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n1ActionPerformed(evt);
            }
        });

        n2.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        n2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        n2.setText("0");
        n2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n2ActionPerformed(evt);
            }
        });

        Operations.setFont(new java.awt.Font("Calibri Light", 2, 18)); // NOI18N
        Operations.setText("Operations");

        plusBtn.setText("+");
        plusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusBtnActionPerformed(evt);
            }
        });

        minusBtn.setText("-");
        minusBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusBtnActionPerformed(evt);
            }
        });

        timesBtn.setText("x");
        timesBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timesBtnActionPerformed(evt);
            }
        });

        divBtn.setText("/");
        divBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divBtnActionPerformed(evt);
            }
        });

        sqrtNumberOneBtn.setText("n1");
        sqrtNumberOneBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtNumberOneBtnActionPerformed(evt);
            }
        });

        sqrtNumberTwoBtn.setText("n2");
        sqrtNumberTwoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sqrtNumberTwoBtnActionPerformed(evt);
            }
        });

        greaterOrLessBtn.setText("><");
        greaterOrLessBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                greaterOrLessBtnActionPerformed(evt);
            }
        });

        clearBtn.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        clearBtn.setText("Clear");
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        greaterOrLessLabel.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        greaterOrLessLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        greaterOrLessLabel.setText("Largest Number: N/A");

        jLabel2.setText("Number 1:");

        jLabel3.setText("Number 2:");

        jLabel4.setText("Basic");

        jLabel5.setText("Square Root");

        jLabel6.setText("Greater or less");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(resultLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Operations)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(plusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(minusBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(sqrtNumberTwoBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(greaterOrLessBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(sqrtNumberOneBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(n1)
                                .addComponent(n2)
                                .addComponent(greaterOrLessLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel3))
                        .addGap(43, 43, 43))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(timesBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clearBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(156, 156, 156)
                .addComponent(resultLabel)
                .addGap(66, 66, 66)
                .addComponent(Operations)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(plusBtn)
                    .addComponent(n1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minusBtn)
                    .addComponent(n2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(timesBtn)
                .addGap(18, 18, 18)
                .addComponent(divBtn)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(greaterOrLessLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(sqrtNumberOneBtn)))
                .addGap(18, 18, 18)
                .addComponent(sqrtNumberTwoBtn)
                .addGap(5, 5, 5)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(greaterOrLessBtn)
                .addGap(18, 18, 18)
                .addComponent(clearBtn)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void n1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_n1ActionPerformed

    private void n2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_n2ActionPerformed

    private void sqrtNumberOneBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtNumberOneBtnActionPerformed
        if (validateInputOne()) {
            double res = (float) Math.sqrt(Float.parseFloat(n1.getText()));
            resultLabel.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }

    }//GEN-LAST:event_sqrtNumberOneBtnActionPerformed

    private void greaterOrLessBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_greaterOrLessBtnActionPerformed
        if (validateInputs()) {
            int num1 = convertInput(n1.getText());
            int num2 = convertInput(n2.getText());
            if (num1 > num2) {
                greaterOrLessLabel.setText("Largest number: " + num1);
            } else if (num2 > num1) {
                greaterOrLessLabel.setText("Largest number: " + num2);
            } else {
                greaterOrLessLabel.setText("Numbers at the same.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }
    }//GEN-LAST:event_greaterOrLessBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        greaterOrLessLabel.setText("Largest number: N/A");
        resultLabel.setText("0");
        n1.setText("");
        n2.setText("");
    }//GEN-LAST:event_clearBtnActionPerformed

    private void plusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusBtnActionPerformed
        if (validateInputs()) {
            int res = 0;
            int num1 = convertInput(n1.getText());
            int num2 = convertInput(n2.getText());
            res = num1 + num2;
            resultLabel.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }

    }//GEN-LAST:event_plusBtnActionPerformed

    private void minusBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusBtnActionPerformed
        if (validateInputs()) {
            int res = 0;
            int num1 = convertInput(n1.getText());
            int num2 = convertInput(n2.getText());
            res = num1 - num2;
            resultLabel.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }

    }//GEN-LAST:event_minusBtnActionPerformed

    private void timesBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timesBtnActionPerformed
        if (validateInputs()) {
            int res = 0;
            int num1 = convertInput(n1.getText());
            int num2 = convertInput(n2.getText());
            res = num1 * num2;
            resultLabel.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }

    }//GEN-LAST:event_timesBtnActionPerformed

    private void divBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divBtnActionPerformed
        if (validateInputs()) {
            double res;
            double num1 = convertInput(n1.getText());
            double num2 = convertInput(n2.getText());
            res = num1 / num2;
            resultLabel.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }

    }//GEN-LAST:event_divBtnActionPerformed

    private void sqrtNumberTwoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sqrtNumberTwoBtnActionPerformed
        if (validateInputTwo()) {
            double res = (float) Math.sqrt(Float.parseFloat(n2.getText()));
            resultLabel.setText(String.valueOf(res));
        } else {
            JOptionPane.showMessageDialog(null, "Invalid operation: You can't enter non-integer values at inputs.", "Syntax error.", HEIGHT);
        }
    }//GEN-LAST:event_sqrtNumberTwoBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExtendedCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExtendedCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExtendedCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExtendedCalculator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExtendedCalculator().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Operations;
    private javax.swing.JButton clearBtn;
    private javax.swing.JButton divBtn;
    private javax.swing.JButton greaterOrLessBtn;
    private javax.swing.JLabel greaterOrLessLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton minusBtn;
    private javax.swing.JTextField n1;
    private javax.swing.JTextField n2;
    private javax.swing.JButton plusBtn;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JButton sqrtNumberOneBtn;
    private javax.swing.JButton sqrtNumberTwoBtn;
    private javax.swing.JButton timesBtn;
    // End of variables declaration//GEN-END:variables
}
